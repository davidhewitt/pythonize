name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check rust formatting (rustfmt)
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all

  build:
    needs: [fmt] # don't wait for clippy as fails rarely and takes longer
    name: python${{ matrix.python-version }} ${{ matrix.os }} rust-${{ matrix.rust}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # If one platform fails, allow the rest to keep testing.
      matrix:
        python-architecture: ["x64"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.13t"]
        os: ["macos-13", "ubuntu-latest", "windows-latest"]
        rust: [stable]
        include:
          - python-version: "3.13"
            os: "ubuntu-latest"
            rust: "1.63"
          - python-version: "3.13"
            python-architecture: "arm64"
            os: "macos-latest"
            rust: "stable"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: Quansight-Labs/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-python-architecture }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v2
        continue-on-error: true

      - name: Test
        run: cargo test --verbose

      # https://github.com/PyO3/pyo3/issues/4709 - can't use abi3 w. freethreaded build
      - if: ${{ !endsWith(matrix.python-version, 't') }}
        name: Test (abi3)
        run: cargo test --verbose --features pyo3/abi3-py37

    env:
      RUST_BACKTRACE: 1

  coverage:
    needs: [fmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        continue-on-error: true
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - run: |
          cargo llvm-cov clean
          cargo llvm-cov --codecov --output-path codecov.json
      - uses: codecov/codecov-action@v4
        with:
          file: codecov.json
          token: ${{ secrets.CODECOV_TOKEN }}
